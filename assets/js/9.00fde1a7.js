(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{170:function(e,t,n){"use strict";n.r(t);var a=n(0),r=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"event-provider"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#event-provider","aria-hidden":"true"}},[e._v("#")]),e._v(" Event Provider")]),e._v(" "),n("p",[e._v("Event Provider is a module that creates event transactions.\nUnlike normal transactions, proposers must include the event transactions to a designated block, or the block cannot be consented.")]),e._v(" "),n("h2",{attrs:{id:"methods-supposed-to-implement-in-event-provider"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#methods-supposed-to-implement-in-event-provider","aria-hidden":"true"}},[e._v("#")]),e._v(" Methods supposed to implement in Event Provider")]),e._v(" "),n("p",[e._v("It is assumed that the following two methods are implemented in Event Provider.\nThe interfaces of these methods are defined in "),n("code",[e._v("@uniqys/dapp-interface")]),e._v(".")]),e._v(" "),n("h3",{attrs:{id:"ready-promise-void"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ready-promise-void","aria-hidden":"true"}},[e._v("#")]),e._v(" "),n("code",[e._v("ready (): Promise<void>")])]),e._v(" "),n("p",[e._v("This method is called when a DApp starts.\nIt should be used to prepare for calling "),n("code",[e._v("getTransaction")]),e._v(" method.")]),e._v(" "),n("h3",{attrs:{id:"gettransactions-fromtimestamp-number-totimestamp-number-nonce-number-promise-transaction"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gettransactions-fromtimestamp-number-totimestamp-number-nonce-number-promise-transaction","aria-hidden":"true"}},[e._v("#")]),e._v(" "),n("code",[e._v("getTransactions (fromTimestamp: number, toTimestamp: number, nonce: number): Promise<Transaction[]>")])]),e._v(" "),n("p",[e._v("This method gets a list of transactions issued by Event Provider.\nIt is assumed to return a list of transactions issued from "),n("code",[e._v("fromTimestamp")]),e._v(" to "),n("code",[e._v("toTimestamp")]),e._v(".\nThe "),n("code",[e._v("nonce")]),e._v(" is the next value of the current nonce of Event.")]),e._v(" "),n("h2",{attrs:{id:"settings-of-dapp-json"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#settings-of-dapp-json","aria-hidden":"true"}},[e._v("#")]),e._v(" Settings of dapp.json")]),e._v(" "),n("p",[e._v("You can use an Event Provider in a DApp by adding the "),n("code",[e._v("eventProvider")]),e._v(" option in the config file "),n("code",[e._v("dapp.json")]),e._v(".")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",[e._v("Key")]),e._v(" "),n("th",[e._v("Explanation")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[n("code",[e._v("eventProvider")])]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("┣ "),n("code",[e._v("package")])]),e._v(" "),n("td",[e._v("Path to package of Event Provider")])]),e._v(" "),n("tr",[n("td",[e._v("┗ "),n("code",[e._v("options")])]),e._v(" "),n("td",[e._v("Parameters necessary for Event Provider")])])])]),e._v(" "),n("h2",{attrs:{id:"two-way-pegging"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#two-way-pegging","aria-hidden":"true"}},[e._v("#")]),e._v(" Two-way Pegging")]),e._v(" "),n("p",[e._v("Event Provider enables building a two-way peg.\nTwo-way peg is a system in which assets can be transferred between two blockchains.\nFor example, let's consider transferring tokens issued in Ethereum to Uniqys.\nEthereum can issue Events when the users run a contract function.\nEvent Provider receives those Events and convert it into an event transaction, and send it to the application.\nFinally, the application can transfer tokens according to the Event provided by Ethereum.\nOn the contrary, when users want to send tokens back to Ethereum, users can submit a proof of withdrawal to Ethereum to execute the withdraw function in Ethereum.")]),e._v(" "),n("h3",{attrs:{id:"example-of-ethereum-sidechain"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#example-of-ethereum-sidechain","aria-hidden":"true"}},[e._v("#")]),e._v(" Example of Ethereum Sidechain")]),e._v(" "),n("p",[e._v("When you use "),n("code",[e._v("@uniqys/event-provider/ethereum")]),e._v(' as Event Provider, like the sample application "Ethereum Sidechain" in Uniqys Kit, you need to set the following parameters.')]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",[e._v("Key")]),e._v(" "),n("th",[e._v("Explanation")]),e._v(" "),n("th",[e._v("Default Value")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[n("code",[e._v("options")])]),e._v(" "),n("td"),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("┣ "),n("code",[e._v("providerEndPoint")])]),e._v(" "),n("td",[e._v("Endpoint of Event Provider")]),e._v(" "),n("td",[e._v("http://localhost:7545")])]),e._v(" "),n("tr",[n("td",[e._v("┣ "),n("code",[e._v("confirmationTime")])]),e._v(" "),n("td",[e._v("Confirmation time")]),e._v(" "),n("td",[e._v("1500(msec)")])]),e._v(" "),n("tr",[n("td",[e._v("┗ "),n("code",[e._v("artifactPath")])]),e._v(" "),n("td",[e._v("Path to deployed contract")]),e._v(" "),n("td",[n("code",[e._v("''")])])])])])])}],!1,null,null,null);r.options.__file="event-provider.md";t.default=r.exports}}]);