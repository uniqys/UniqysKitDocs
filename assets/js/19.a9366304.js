(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{180:function(e,t,r){"use strict";r.r(t);var v=r(0),n=Object(v.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"event-provider"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#event-provider","aria-hidden":"true"}},[e._v("#")]),e._v(" Event Provider")]),e._v(" "),r("p",[e._v("Event Providerは、イベントトランザクションを発行します。\nイベントトランザクションは一般的なトランザクションと違い、特定のブロックに"),r("strong",[e._v("必ず")]),e._v("取り込まれなければいけないトランザクションになります。\nですから、バリデータはブロックを検証する際に、必要なイベントトランザクションが含まれていなければブロックを承認しません。")]),e._v(" "),r("h2",{attrs:{id:"event-providerが実装すべきメソッド"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#event-providerが実装すべきメソッド","aria-hidden":"true"}},[e._v("#")]),e._v(" Event Providerが実装すべきメソッド")]),e._v(" "),r("p",[e._v("EventProviderは以下の2つのメソッドが実装されていることを想定しています。\nこれらのメソッドのインターフェースは "),r("code",[e._v("@uniqys/dapp-interface")]),e._v(" で定義されています。")]),e._v(" "),r("h3",{attrs:{id:"ready-promise-void"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ready-promise-void","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("code",[e._v("ready (): Promise<void>")])]),e._v(" "),r("p",[e._v("DAppの起動時に呼び出されるメソッドです。\n"),r("code",[e._v("getTransaction")]),e._v(" メソッドを呼び出すのに必要な準備を行うことを想定しています。")]),e._v(" "),r("h3",{attrs:{id:"gettransactions-fromtimestamp-number-totimestamp-number-nonce-number-promise-transaction"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#gettransactions-fromtimestamp-number-totimestamp-number-nonce-number-promise-transaction","aria-hidden":"true"}},[e._v("#")]),e._v(" "),r("code",[e._v("getTransactions (fromTimestamp: number, toTimestamp: number, nonce: number): Promise<Transaction[]>")])]),e._v(" "),r("p",[e._v("Event Providerが発行するトランザクションのリストを取得するメソッドです。\n"),r("code",[e._v("fromTimestamp")]),e._v(" から "),r("code",[e._v("toTimestamp")]),e._v(" までの時間に発行されたトランザクションのリストを返すようにしてください。\n"),r("code",[e._v("nonce")]),e._v(" には現在のEventのnonceの次の値を指定します。")]),e._v(" "),r("h2",{attrs:{id:"dapp-jsonの設定"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#dapp-jsonの設定","aria-hidden":"true"}},[e._v("#")]),e._v(" dapp.jsonの設定")]),e._v(" "),r("p",[r("code",[e._v("dapp.json")]),e._v(" に "),r("code",[e._v("eventProvider")]),e._v(" を追加することで、DAppからEvent Providerを使用できます。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("キー")]),e._v(" "),r("th",[e._v("値の説明")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("eventProvider")])]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("┣ "),r("code",[e._v("package")])]),e._v(" "),r("td",[e._v("EventProviderを実装したパッケージへのパス")])]),e._v(" "),r("tr",[r("td",[e._v("┗ "),r("code",[e._v("options")])]),e._v(" "),r("td",[e._v("EventProviderに応じて必要なパラメータ")])])])]),e._v(" "),r("h2",{attrs:{id:"two-way-pegging"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#two-way-pegging","aria-hidden":"true"}},[e._v("#")]),e._v(" Two-way Pegging")]),e._v(" "),r("p",[e._v("Event Providerを導入することで、Uniqys KitではTwo-way Peggingを実現できます。\nTwo-way Peggingとは、2つ以上のブロックチェーン間をトークン移動できる仕組みです。\n例えば、Ethereumで発行されたトークンをUniqys Kitのチェーンと入出金することを考えます。\nEthereumのコントラクトは、関数実行するとEventを発行する機能がありますが、そのEventをUniqys Kitのイベントトランザクションとし、その内容にコンセンサスを取ることができます。\nアプリケーションはChain Core経由でイベントを受け取り、それに基づいたトークンの移動等を行うことができます。\n反対に、Uniqys KitからEthereumにトークンを戻す際は、出金トランザクションが実行されたことを証明するデータをEthereumに提出することで、Ethereumで出金処理を実行できます。\nEvent Providerによりトークンの移動に自由度が増し、多種多様な設計のDAppsが作れるようになります。")]),e._v(" "),r("h3",{attrs:{id:"ethereum-sidechainの例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ethereum-sidechainの例","aria-hidden":"true"}},[e._v("#")]),e._v(" Ethereum Sidechainの例")]),e._v(" "),r("p",[e._v('Uniqys Kitで提供されているサンプルアプリ"Ethereum Sidechain"のように、 '),r("code",[e._v("@uniqys/event-provider/ethereum")]),e._v(" をEvent Providerとする場合にはdapp.jsonの "),r("code",[e._v("eventProvider/options")]),e._v(" に以下の項目を指定します。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("キー")]),e._v(" "),r("th",[e._v("値の説明")]),e._v(" "),r("th",[e._v("デフォルト値")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("options")])]),e._v(" "),r("td"),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("┣ "),r("code",[e._v("providerEndPoint")])]),e._v(" "),r("td",[e._v("Event Providerのエンドポイント")]),e._v(" "),r("td",[e._v("http://localhost:7545")])]),e._v(" "),r("tr",[r("td",[e._v("┣ "),r("code",[e._v("confirmationTime")])]),e._v(" "),r("td",[e._v("承認時間")]),e._v(" "),r("td",[e._v("1500(msec)")])]),e._v(" "),r("tr",[r("td",[e._v("┗ "),r("code",[e._v("artifactPath")])]),e._v(" "),r("td",[e._v("デプロイされたコントラクトへのパス")]),e._v(" "),r("td",[r("code",[e._v("''")])])])])])])}],!1,null,null,null);n.options.__file="event-provider.md";t.default=n.exports}}]);