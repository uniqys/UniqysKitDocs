(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{169:function(e,t,a){"use strict";a.r(t);var i=a(0),s=Object(i.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[e._m(0),e._v(" "),a("p",[e._v("Easy Framework is one of Uniqys Kit's main component.\nWith Easy Framework, developers are able to build a DApp like a conventional web application, even without being conscious of the blockchain.")]),e._v(" "),e._m(1),e._v(" "),a("p",[e._v("Easy Framework acts as an intermediary of client, application, and Chain Core, handling all the requests and distributes to the proper application.\nAdditionally, Easy Framework provides a database for blockchain and APIs for account management.")]),e._v(" "),a("img",{attrs:{src:e.$withBase("/uniqys-overview.png"),alt:"Uniqys Overview"}}),e._v(" "),e._m(2),e._v(" "),a("p",[e._v("Gateway works as a proxy for requests from clients.\nIn Easy Framework, Gateway classifies requests from clients to two types: Normal Request and Signed Request.")]),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),a("p",[e._v("In DApps development with Uniqys Kit, Easy Framework provides the database.\nEasy Framework provides Memcached server to control the database from the application.\nApplications are able to use pre-existing Memcached client libraries.")]),e._v(" "),e._m(6),e._v(" "),a("p",[e._v("Outer API and Inner API are for managing accounts in the DApp, and it provides functions for checking transaction status and modifying account information.")]),e._v(" "),a("p",[e._v("Outer API is provided in Gateway, and it has APIs to check transaction status and account information.\nInner API has functions of Outer API, and in addition, it has functions to modify token balance.\nCheck "),a("router-link",{attrs:{to:"/easy-framework/api.html"}},[e._v("here")]),e._v(" for more details of usage.")],1)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"easy-framework"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#easy-framework","aria-hidden":"true"}},[this._v("#")]),this._v(" Easy Framework")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"how-it-works"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#how-it-works","aria-hidden":"true"}},[this._v("#")]),this._v(" How it works")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"gateway"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gateway","aria-hidden":"true"}},[this._v("#")]),this._v(" Gateway")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Normal Request indicates "),t("code",[this._v("GET")]),this._v(" requests which do not modify the database.\nFor example, a simple request that fetches HTML from the website is a Normal Request.\nOnce Gateway receives Normal Request, it will send directly to the application.\nAnd the response will be sent back to the client via Gateway.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Signed Request indicates requests of "),t("code",[this._v("POST")]),this._v(" and "),t("code",[this._v("PUT")]),this._v(" which modifies the database.\nIt requires the user's signature.\nThis type of request is not directly sent to the application, but is sent via Chain Core.\nTherefore, users have to wait for the Chain Core to include the Signed Request in the blockchain, to receive the response from the application.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"memcached-protocol"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#memcached-protocol","aria-hidden":"true"}},[this._v("#")]),this._v(" Memcached Protocol")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"outer-api-inner-api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#outer-api-inner-api","aria-hidden":"true"}},[this._v("#")]),this._v(" Outer API / Inner API")])}],!1,null,null,null);s.options.__file="easy-framework.md";t.default=s.exports}}]);